#include <stdio.h>
#include <stdlib.h>


typedef struct Elemento* ApontadorElemento;

typedef struct Elemento {
    unsigned int dado;
    ApontadorElemento prox;
} Elemento;

ApontadorElemento base;


int push (int dado) {
    ApontadorElemento q, r;
    Elemento elemento;
    
    elemento.dado = dado;
    
    q = (ApontadorElemento) malloc( sizeof (elemento) );
    
    q->dado = elemento.dado;

    if (base == NULL){
        base = q;
        base->prox = NULL;
        return (0);
        
    }
    else{
        r = base;
        while (r->prox != NULL) {
            r = r->prox;
        }
        
        r->prox = q;
        q->prox = NULL;
        return (0);
        }
    }



int pop() {
    ApontadorElemento r,q;
    r = base;
    q = r;
    int retorno;
    
    while(r->prox != NULL){
        q = r;
        r = r->prox;
    }
    
    retorno = r->dado;
    free(r);
    
    q->prox = NULL;
    
    return retorno;
}

int top() {
    ApontadorElemento r;
    r = base;
    
    if(base == NULL){
        printf("Pilha vazia\n");
        return -1;
    }else{
        while(r->prox != NULL){
            r = r->prox;
        }
        
        return r->dado;
    }
}

void imprimir() {
    ApontadorElemento r;
    r = base;
    
    printf("ConteÃºdo da pilha:\n");
    do{
        printf("%d ", r->dado);
        r = r->prox;
    }while(r != NULL);
    
    printf("\n");
}

void verificar(){
    if(base == NULL){
        printf("Pilha vazia\n");
    }
}

int main() {
    push(10);
    push(20);
    push(30);
    imprimir();
    printf("Elemento no topo: %d\n", top());
    printf("Elemento removido: %d\n", pop());
    imprimir();
    return 0;
}
