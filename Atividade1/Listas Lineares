
#include <stdio.h>
#define MAX_SIZE 10

int lista[MAX_SIZE];
int tamanho = 0;

void inserir(int elemento) {
    if (tamanho < MAX_SIZE) {
        lista[tamanho++] = elemento;
    } else {
        printf("Lista cheia!\n");
    }
}

void remover(int index) {
    if (index < 0 || index >= tamanho) {
        printf("Índice inválido!\n");
    } else {
        for (int i = index; i < tamanho - 1; i++) {
            lista[i] = lista[i + 1];
        }
        tamanho--;
    }
}

void imprimir() {
    printf("Elementos da lista:\n");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", lista[i]);
    }
    printf("\n");
}

void buscar(int elemento){
    int i, k = 0;
    
    for(i=0; i< tamanho; i++){
        if(lista[i]==elemento){
            k = 1;
            break;
        }
    }
    
    if(k==0){
        printf("Elemento não encontrado\n");
    }else{
        printf("Elemento na posição %d\n", i+1);
    }
}

void inverter(){
    int i, temp;

    for (i = 0; i < tamanho/2; i++) {
        temp = lista[i];
        lista[i] = lista[tamanho-1 - i];
        lista[tamanho-1 - i] = temp;
    }
    
    imprimir();

}

void max(){
    int i, max;
    
    max = -99999999;
    
    for(i = 0; i<tamanho; i++){
        if(lista[i] > max){
            max = lista [i];
        }
    }
    
    printf("Máximo número na lista: %d\n", max);
}


void min(){
    int i, min;
    
    min = 99999999;
    
    for(i = 0; i<tamanho; i++){
        if(lista[i] < min){
            min = lista [i];
        }
    }
    
    printf("Mínimo número na lista: %d\n", min);
}

void ordenar(){
    int i, j,  min, temp;
    
    for(j = 0; j<tamanho; j++){
        min = 99999999;
        
        for(i = j; i < tamanho; i++){
            if(lista[i] < min){
                min = lista [i];
            }
        }
        
        temp = lista[j];
        lista[j] = lista[i];
        lista[i] = temp;
    }
}

int main() {
    inserir(10);
    inserir(20);
    inserir(30);
    inserir(55);
    inserir(60);
    inserir(2);
    imprimir();
    remover(1);
    imprimir();
    ordenar();
    imprimir();
    
    return 0;
}
